// adt.js : Algebraic data types and immutable structures in Javascript
// Nathan Faubion <nathan@n-son.com>
(function(e,t){var r={};e.adt=t.exports=r,r.util={};var i=Array.prototype.slice,s=Function.prototype.apply;r.util.toArray=function(e){return i.call(e)},r.util.extend=function(e){var t=i.call(arguments,1);for(var n=0,r=t.length;n<r;n++)for(var s in t[n])e[s]=t[n][s];return e},r.util.ctrApply=function(e,t){var n=function(){};n.prototype=e.prototype;var r=new n,i=e.apply(r,t);return Object(i)===i?i:r},r.util.partial=function(e){var t=i.call(arguments,1);return function(){return e.apply(this,t.concat(r.util.toArray(arguments)))}},r.util.curry=function(e,t){return t===undefined&&(t=e.length),function(){var n=r.util.toArray(arguments);if(n.length<t){var i=r.util.partial.apply(this,[e].concat(n));return t-n.length>0?r.util.curry(i,t-n.length):i}return e.apply(this,n)}},r.util.toString=function(){var e=this.constructor,t=e.className||"Anonymous",n=e.unapply(this);return t+(n.length?"("+n.join(", ")+")":"")},r.__Base__=function(){},r.data=function(){var e=typeof arguments[0],t,n,i;if(e==="object")return n=arguments[0],r.data(function(e,t){for(var r in n)t(r,n[r])});t=arguments[0]||function(){},i=[];var u=function(){if(!(this instanceof u)&&u.apply!==s)return u.apply(this,arguments)};u.prototype=new r.__Base__,u.type=function(e,t){typeof e!="string"&&(t=e,e=o("Anonymous")),t?t.prototype instanceof r.__Base__||(t=r.record(t)):t=r.single();var n=t.prototype;return t.prototype=new u,t.prototype.constructor=t,t.prototype.toString=r.util.toString,t.className=e,u.prototype["is"+e]=function(){return this instanceof t},r.util.extend(t.prototype,n),u[e]=t,i.push(e),t};var n=t.call(u,u,u.type);if(typeof n=="object")for(var a in n)u.type(a,n[a]);return u.seel=function(){var e=0,t=i.length,n;for(;e<t;e++)n=this[a].seel,n instanceof Function&&n();return delete u.type,delete u.seel,u},u.__names__=i,u},r.single=function(){var e,t;return t=function(){if(!(this instanceof t))return new t;if(e)return e;e=this},t.prototype=new r.__Base__,t.prototype.constructor=t,t.prototype.clone=function(){return e},t.prototype.equals=function(e){return this===e},t.create=function(){return t()},t.unapply=function(){return[]},t.unapplyObj=function(){return{}},t},r.record=function(){var e=typeof arguments[0],t,i,s,o,u;if(e==="string"){var a=r.util.toArray(arguments),f=0,l=a.length;o={};for(;f<l;f++)o[a[f]]=null;return r.record(o)}if(e==="object")return o=arguments[0],r.record(function(e,t){for(var n in o)t(n,o[n])});u=arguments[0]||function(){},t=[],i=[],s=function(){var e=r.util.toArray(arguments),n=t.length;if(e.length<n){var o=r.util.partial.apply(this,[s].concat(e));return n-e.length>0?r.util.curry(o,n-e.length):o}if(!(this instanceof s))return r.util.ctrApply(s,e);if(e.length>t.length)throw new Error("Too many arguments");for(var u=0,n=e.length;u<n;u++)this["_"+t[u]]=i[t[u]](e[u])},s.prototype=new r.__Base__,s.prototype.constructor=s,s.prototype.clone=function(){var e=[],i=0,o=t.length,u;for(;i<o;i++)u=this[t[i]](),e.push(n instanceof r.__Base__?u.clone():u);return s.apply(null,e)},s.prototype.slot=function(e){if(typeof e=="number"){if(e<0||e>t.length-1)throw new Error("Field index out of range");e=t[e]}else if(t.indexOf(e)===-1)throw new Error("Field name does not exist");return this[e]()},s.prototype.set=function(e){var n=[],r=0,o=t.length,u,a;for(;r<o;r++)a=t[r],u=a in e?e[a]:this[a](),n.push(i[a](u));return s.apply(null,n)},s.prototype.equals=function(e){if(this===e)return!0;if(e instanceof s){var n=0,i=t.length,o,u;for(;n<i;n++){o=this[t[n]](),u=e[t[n]]();if(o instanceof r.__Base__){if(!o.equals(u))return!1}else if(o!==u)return!1}}return!0},s.create=function(e){var n=[],r=0,o=t.length,u;for(;r<o;r++){u=t[r];if(!(u in e))throw new Error("Too few arguments");n.push(i[u](e[u]))}return s.apply(null,n)},s.unapply=function(e){var n=[],r=0,i=t.length;for(;r<i;r++)n.push(e[t[r]]());return n},s.unapplyObj=function(e){var n={},r=0,i=t.length;for(;r<i;r++)n[t[r]]=e[t[r]]();return n},s.field=function(e,n){n||(n=r.any);if(typeof n!="function")throw new TypeError("Constraints must be functions");return t.push(e),i[e]=n,s},o=u.call(s,s,s.field);if(typeof o=="object")for(var c in o)s.field(c,o[c]);var f=0,l=t.length;for(;f<l;f++)(function(e){s.prototype[e]=function(){return this["_"+e]}})(t[f]);return s.__names__=t,s.__constraints__=i,s.seel=function(){return delete s.field,delete s.seel,s},s},r.any=function(e){return e},r.only=function(){var e=r.util.toArray(arguments);return function(t){var n=0,i=e.length,s;for(;n<i;n++){s=e[n];if(s instanceof Function){if(t instanceof s)return t;if(s===Number&&typeof t=="number")return t;if(s===String&&typeof t=="string")return t;if(s===Boolean&&typeof t=="boolean")return t}else{if(s instanceof r.__Base__&&s.equals(t))return t;if(s===t)return t}}throw new TypeError("Unexpected type")}};var o=function(){var e=0;return function(t){return t+e++}}()})(typeof window!="undefined"?window:{},typeof module!="undefined"?module:{});